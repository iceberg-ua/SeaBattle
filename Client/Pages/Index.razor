@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@inject IJSRuntime JsRuntime

<LoginComponent/>

@code {
    private (int x, int y)? _clickPoint = null;

    private bool _joined = false;
    private string? _userName = null;
    private string _infoMessage = "Please enter your name and click 'Join Game' button";
    private string _infoMessageClass = "alert-primary";
    private List<string> _serverMessages = new();

    [CascadingParameter]
    public HubConnection? BattleHub { get; set; }

    protected override async Task OnInitializedAsync()
    {
        BattleHub = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/battlehub"))
            .Build();

        BattleHub.On<int, int>("AtackCell", (x, y) =>
        {
            _clickPoint = (x, y);
            InvokeAsync(StateHasChanged);
        });

        await BattleHub.StartAsync();
    }

    #region Hub events

    private async Task OnCellClick((int x, int y) cell)
    {
        _clickPoint = cell;

        if (BattleHub is not null)
        {
            await BattleHub.SendAsync("SendMessage", cell.x, cell.y);
        }
    }

    #endregion

    private async Task JoinGameClick()
    {
        if (string.IsNullOrEmpty(_userName))
        {
            await JsRuntime.InvokeVoidAsync("alert", "Please enter user name!");
        }
        else
        {
            BattleHub?.On<string, string, bool>("JoinedTable", (userName, tableName, newTable) =>
            {
                var action = newTable ? "created" : "joined";
                var msg = $"{userName} {action} table {tableName}";

                _serverMessages.Add(msg);

                if(action.Equals("created"))
                {
                    _infoMessage = "Table is created. Waiting for opponent...";
                    _infoMessageClass = "alert-warning";
                    _joined = true;
                }
                else
                {
                    _infoMessage = $"{userName} joined the game table. Now let's put ships on the battlefield. Click 'Ready' button whenever you are done.";
                    _infoMessageClass = "alert-info";
                }

                InvokeAsync(StateHasChanged);
            });

            await BattleHub?.SendAsync("JoinGroup", _userName)!;
        }
    }

    private async Task ReadyClick()
    {
    }
}