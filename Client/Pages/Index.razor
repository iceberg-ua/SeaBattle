@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using SeaBattle.Client.Services;
@using SeaBattle.Shared.Hub;

@inject IJSRuntime JsRuntime
@inject ILocalStorageService Storage

<div class="container centered-form">
    @if (PlayerState is null)
    {
        <LoginComponent OnJoinButtonClick="JoinButtonClicked" />
    }
    else
    {
        <div class="text-center mb-3">
            <lable class="mb-5">
                <b>@PlayerState.Name</b>
            </lable>
            <br/>
            <label>Welcome to the Sea Battle</label>

            <div class="text-center mb-1">
                Now postion your ships and press <b>Ready</b> button
            </div>
            <div class="field-container">
                <Battlefield Field="PlayerState.Field" FieldSize="PlayerState.FieldSize" CellClicked="@OwnFieldCellClicked"></Battlefield>
                @if (PlayerState.InProgress)
                {
                    <Battlefield Field="PlayerState.Field" FieldSize="PlayerState.FieldSize" CellClicked="@OwnFieldCellClicked"></Battlefield>
                }
            </div>
            <div class="button-container">
                <button class="btn btn-danger" disabled="@ClearButtonDisable" @onclick=ClearButtonClicked>Clear</button>
                <button class="btn btn-success" disabled="!@PlayerState.Fleet.Complete">Ready</button>
            </div>
        </div>
    }
</div>

@code {
    [CascadingParameter]
    public HubConnection BattleHub { get; set; } = default!;

    [CascadingParameter]
    public PlayerState PlayerState { get; set; } = default!;

    private bool ClearButtonDisable => PlayerState.Field.All(c => c == CellState.empty);

    public async Task JoinButtonClicked(string userName)
    {
        await BattleHub?.SendAsync(nameof(IGameHub.JoinGame), Guid.Empty, userName)!;
    }

    public void OwnFieldCellClicked((int x, int y) cell)
    {
        if(!PlayerState.InProgress)
            PlayerState.TryToUpdateState(cell.x, cell.y);
    }

    private void ClearButtonClicked(MouseEventArgs e)
    {
        PlayerState.ClearField();
    }
}