<div class="sea-cell @CssState @CssClass @TargetingCssClass" id="cell-@($"{X}-{Y}")" @onmousedown=CellClick @onmouseenter=OnMouseEnter @onmouseleave=OnMouseLeave>
    @if (State == CellState.hit)
    {
        <div class="hit-marker"></div>
    }
    @if (State == CellState.miss)
    {
        <div class="miss-marker"></div>
    }
</div>

@code {
    [Parameter, EditorRequired]
    public int X { get; set; }

    [Parameter, EditorRequired]
    public int Y { get; set; }

    [Parameter]
    public EventCallback<(int, int)> Clicked { get; set; }

    [Parameter]
    public CellState State { get; set; } = CellState.empty;

    [Parameter]
    public string CssClass { get; set; } = "";

    [Parameter]
    public EventCallback<(int, int)> MouseEnter { get; set; }

    [Parameter]
    public EventCallback<(int, int)> MouseLeave { get; set; }

    [Parameter]
    public string TargetingCssClass { get; set; } = "";

    private string CssState => State.ToString();

    private async void CellClick()
    {
        await Clicked.InvokeAsync((X, Y));
    }

    private async void OnMouseEnter()
    {
        await MouseEnter.InvokeAsync((X, Y));
    }

    private async void OnMouseLeave()
    {
        await MouseLeave.InvokeAsync((X, Y));
    }
}