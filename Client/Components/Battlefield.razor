<div class="@StateClass">
    <table>
        @for (var i = 0; i < FieldSize; i++)
        {
            <tr>
                @for (var j = 0; j < FieldSize; j++)
                {
                    <td>
                        <SeaCell X=i Y=j 
                                 Clicked=CellClicked 
                                 State="Field[i * 10 + j]" 
                                 MouseEnter=OnCellMouseEnter 
                                 MouseLeave=OnCellMouseLeave 
                                 TargetingCssClass="@GetTargetingCssClass(i, j)"></SeaCell>
                    </td>
                }
            </tr>
        }
    </table>
</div>

@code {
    [Parameter]
    public CellState[] Field { get; set; } = null!;

    [Parameter]
    public int FieldSize { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public EventCallback<(int,int)> CellClicked { get; set; }

    [Parameter]
    public bool EnableTargeting { get; set; } = false;

    private (int x, int y)? _hoveredCell = null;

    private string StateClass => Disabled ? "hover-disabled" : "";

    private void OnCellMouseEnter((int x, int y) cell)
    {
        if (EnableTargeting && !Disabled)
        {
            _hoveredCell = cell;
            StateHasChanged();
        }
    }

    private void OnCellMouseLeave((int x, int y) cell)
    {
        if (EnableTargeting && !Disabled)
        {
            _hoveredCell = null;
            StateHasChanged();
        }
    }

    private string GetTargetingCssClass(int x, int y)
    {
        if (!EnableTargeting || Disabled || _hoveredCell == null)
            return "";

        var (hoveredX, hoveredY) = _hoveredCell.Value;
        
        if (x == hoveredX && y == hoveredY)
            return "target-cell";
            
        return "";
    }
}