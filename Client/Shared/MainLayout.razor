@using Microsoft.AspNetCore.SignalR.Client;
@using SeaBattle.Client.Services
@using SeaBattle.Shared.Hub;
@using SeaBattle.Shared.Player
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage

@implements IAsyncDisposable

<CascadingValue Value="BattleHub" IsFixed=true>
    <main>
        @Body
    </main>
</CascadingValue>


@code {
    [Parameter]
    public RenderFragment? Body { get; set; }

    public PlayerInfo Player { get; private set; } = default!;
    public HubConnection BattleHub { get; private set; } = default!;

    protected async override Task OnInitializedAsync()
    {
        BattleHub = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/battlehub"))
            .Build();

        await BattleHub.StartAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await TryGetPlayerState();
            StateHasChanged();
        }
    }

    #region Hub Handlers

    private async Task TryGetPlayerState()
    {
        var playerId = await LocalStorage.GetItemAsync("player");

        if (Guid.TryParse(playerId, out Guid id))
        {
            await BattleHub?.SendAsync(nameof(IGameHub.JoinGame), id, "")!;
        }
    }

    #endregion

    public async ValueTask DisposeAsync()
    {
        if (BattleHub is not null)
        {
            await BattleHub.DisposeAsync();
        }
    }
}
